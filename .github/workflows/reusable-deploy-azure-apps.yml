name: Re-Usable Azure Function Deployment Workflow

on:
  workflow_call:
    inputs:
      AZURE_APPNAME:
        required: true
        type: string
      WORKING_DIRECTORY:
        required: true
        type: string
      DOTNET_VERSION:
        required: true
        type: string
      CONFIGURATION:
        required: true
        type: string
      AZURE_SLOTNAME:
        required: false
        #production is the default name of every slot when not specified.
        default: 'production'
        type: string

jobs:
    azfunctionbuild:
        name: "Build ${{ inputs.AZURE_APPNAME }} - ${{ github.ref == 'refs/heads/master' && 'Production' || github.ref == 'refs/heads/develop' && 'Development'  }}"
        runs-on: ubuntu-latest
        steps:
        - run: echo "ðŸŽ‰ Build and Deploy target ${{ inputs.AZURE_APPNAME }} | ${{ inputs.AZURE_SLOTNAME }} | ${{ inputs.WORKING_DIRECTORY }}"
  
        - name: 'Checkout branch'
          uses: actions/checkout@v3
          with:
            token: ${{secrets.GLOBAL_ACCESS_TOKEN}}
            fetch-depth: '0'
        - name: Set up Git credentials
          run: |
            echo ${{github.ref}}
            git config --global credential.helper store
            git config --global user.password ${{ secrets.GLOBAL_ACCESS_TOKEN }}
            git config --global url.https://${{ secrets.GLOBAL_ACCESS_TOKEN }}@github.com/.insteadOf https://github.com/
          shell: bash
        - name: 'Initialize and Update submodules'
          run: |
            git submodule update --init --remote
            git submodule foreach --recursive git fetch
            git submodule foreach --recursive git checkout ${{ 
            github.ref == 'refs/heads/master' && 'master' ||
            github.ref == 'refs/heads/staging' && 'staging' ||
            github.ref == 'refs/heads/develop' && 'develop' }}
            
            
        - name: Setup .NET ${{ inputs.DOTNET_VERSION }} environment
          uses: actions/setup-dotnet@v1
          with:
            dotnet-version: ${{ inputs.DOTNET_VERSION }}
            include-prerelease: true
            
        - name: Set up dependency caching
          uses: actions/cache@v3
          with:
              path: ~/.nuget/packages
              key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
              restore-keys: |
                ${{ runner.os }}-nuget-

        - name: Restore dependencies
          run: dotnet restore "${{ inputs.WORKING_DIRECTORY }}"
            
        - name: Build
          run: dotnet build "${{ inputs.WORKING_DIRECTORY }}" --configuration ${{ inputs.CONFIGURATION }} --no-restore
    
        - name: Publish
          run: dotnet publish "${{ inputs.WORKING_DIRECTORY }}" --configuration ${{ inputs.CONFIGURATION }} --no-build --output "${{ inputs.WORKING_DIRECTORY }}/publish"

        - name: Upload artifact
          uses: actions/upload-artifact@v3
          with:
            name: ${{ inputs.AZURE_APPNAME }}
            path: ${{ inputs.WORKING_DIRECTORY }}/publish

    deploy:
        name: "Deploy ${{ inputs.AZURE_APPNAME }} - ${{ github.ref == 'refs/heads/master' && 'Production' || github.ref == 'refs/heads/develop' && 'Development'  }}"
        runs-on: ubuntu-latest
        needs: azfunctionbuild
        environment:
            name: ${{ 
              github.ref == 'refs/heads/master' && 'Production' || 
              github.ref == 'refs/heads/develop' && 'Development' }}
        steps:
          
        - name: Download artifact
          uses: actions/download-artifact@v3
          with:
            name: ${{ inputs.AZURE_APPNAME }}
            path: ${{ inputs.WORKING_DIRECTORY }}/publish

        - name: 'Deploy to Azure'
          uses: azure/webapps-deploy@v2
          with:
            app-name: ${{ inputs.AZURE_APPNAME }}
            #TODO: Revisit later to try to clean up this if-else. Seems like right now it's not possible to passs the repository environment secrets directly from the caller.
            publish-profile: ${{ 
                  inputs.AZURE_APPNAME == 'agionedev' && secrets.AGIONE_PUBLISHPROFILE ||
                  inputs.AZURE_APPNAME == 'agione-dev-hangfire' && secrets.HANGFIRE_PUBLISHPROFILE ||
                  inputs.AZURE_APPNAME == 'agionedev-laravel-sync' && secrets.LARAVELSYNC_PUBLISHPROFILE ||
                  inputs.AZURE_APPNAME == 'project-agione-flightaware-metrics' && secrets.FLIGHTAWARE_METRICS_PUBLISHPROFILE ||
                  inputs.AZURE_APPNAME == 'agionedev-workday-posting-transactions' && secrets.POSTER_TO_WORKDAY_PUBLISHPROFILE ||
                  inputs.AZURE_APPNAME == 'agionedev-workdaysync' && secrets.WORKDAY_SYNC_PUBLISHPROFILE ||
                  'error'
              }}
            slot-name: ${{ inputs.AZURE_SLOTNAME }}
            package: ${{ inputs.WORKING_DIRECTORY }}/publish

        - name: Delete Artifact
          uses: GeekyEggo/delete-artifact@v2.0.0
          with:
            name: ${{ inputs.AZURE_APPNAME }}
            path: ${{ inputs.WORKING_DIRECTORY }}/publish
